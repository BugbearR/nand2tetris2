class Memory {
    static heap;
    static freeList;

    /** Initializes the class. */
    function void init() {
        heap = 2048;
        freeList = 0;
        // do Memory.poke(freeList, 2048);
        // do Memory.poke(freeList + 1, 2048);
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
        var Array memory;
        let memory = 0;
        return memory[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
        var Array memory;
        let memory = 0;
        memory[address] = value;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
        while (freeList) {
            // find 
        }
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
    }    
}
